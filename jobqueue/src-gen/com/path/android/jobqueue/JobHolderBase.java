package com.path.android.jobqueue;

import de.greenrobot.dao.annotations.SerializedField;

import de.greenrobot.dao.DbUtils;




// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table JOB_HOLDER.
 */
abstract public class JobHolderBase {

    protected Long id;
    protected Integer priority;
    protected Integer runCount;
    protected byte[] __baseJob;
    protected java.util.Date created;
    protected Long runningSessionId;

    //denormalized properties
    @SerializedField
    private com.path.android.jobqueue.BaseJob baseJob;



    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public JobHolderBase() {
    }

    public JobHolderBase(Long id) {
        this.id = id;
    }

    public JobHolderBase(Long id, Integer priority, Integer runCount, byte[] __baseJob, java.util.Date created, Long runningSessionId) {
        this.id = id;
        this.priority = priority;
        this.runCount = runCount;
        this.__baseJob = __baseJob;
        this.created = created;
        this.runningSessionId = runningSessionId;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getPriority() {
        return priority;
    }

    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    public Integer getRunCount() {
        return runCount;
    }

    public void setRunCount(Integer runCount) {
        this.runCount = runCount;
    }

    public byte[] get__baseJob() {
        return __baseJob;
    }

    public void set__baseJob(byte[] __baseJob) {
        this.__baseJob = __baseJob;
    }

    public java.util.Date getCreated() {
        return created;
    }

    public void setCreated(java.util.Date created) {
        this.created = created;
    }

    public Long getRunningSessionId() {
        return runningSessionId;
    }

    public void setRunningSessionId(Long runningSessionId) {
        this.runningSessionId = runningSessionId;
    }

    public void updateNotNull(JobHolder other) {
        if(this == other) {
            return;//both came from db, no need to run this.
        }
        if(other.id != null) {
            this.id = other.id;
        }

        if(other.priority != null) {
            this.priority = other.priority;
        }

        if(other.runCount != null) {
            this.runCount = other.runCount;
        }

        //serialized
        if(other.getBaseJob() != null) {
            setBaseJob(other.getBaseJob());
        }

        if(other.created != null) {
            this.created = other.created;
        }

        if(other.runningSessionId != null) {
            this.runningSessionId = other.runningSessionId;
        }

        // relationships
    }
    public com.path.android.jobqueue.BaseJob getBaseJob() {
        if(baseJob == null && __baseJob != null) {
           baseJob  = (com.path.android.jobqueue.BaseJob) DbUtils.deserializeObject(__baseJob, com.path.android.jobqueue.BaseJob.class);
           __baseJob = null; //clear memory, before save, we'll re-serialize anyways if needed
        }
        return baseJob;
    }

    public void setBaseJob(com.path.android.jobqueue.BaseJob baseJob) {
        this.baseJob = baseJob;
        __baseJob = null; //onBeforeSave will do serialization
    }


    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

    public void onBeforeSave() {
        //you can override this method and do some stuff if you want to :)
        if(baseJob != null) {//if property is nulled, its setter will already null the byte array.
            __baseJob = DbUtils.serializeObject(baseJob);
        }

    }
}
